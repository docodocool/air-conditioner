{"version":3,"sources":["components/Protip.tsx","app/hooks.ts","features/toast/toastSlice.ts","features/ac/acSlice.ts","components/RemoteControl.tsx","logo.svg","features/ac/AirConditioner.tsx","features/toast/Toast.tsx","theme.tsx","App.tsx","app/store.ts","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","root","margin","spacing","display","justifyContent","alignItems","ProTip","classes","Typography","align","className","color","useAppDispatch","useDispatch","useAppSelector","useSelector","toastSlice","createSlice","name","initialState","open","message","reducers","setMessage","state","action","payload","setOpen","actions","temperatureKey","namespace","status","mode","temperature","parseInt","localStorage","getItem","acSlice","increment","setItem","toString","decrement","setMode","toggleStatus","selectTemperature","ac","extendedIcon","marginRight","RCButton","props","Fab","onClick","di","document","getElementById","play","playDi","toggleAC","dispatch","load","acWork","playWorkSound","createMuiTheme","palette","primary","green","RemoteControl","Box","my","flexDirection","id","src","preload","aria-label","ThemeProvider","style","backgroundColor","getState","acColor","acBorder","borderRadius","borderBottomLeftRadius","borderBottomRightRadius","acDisplay","textShadow","acLogo","width","acStatus","energyLabel","AcBorder","bgcolor","height","border","borderColor","boxShadow","position","AcTemperature","variant","AcDisplay","React","forwardRef","ref","top","right","AcLogo","textAlign","mt","href","pkg","url","title","target","rel","logo","alt","AirOutlet","AcStatus","led","textLabel","num","size","mx","titleLength","Array","keys","titleLabel","map","n","EnergyLabel","left","p","px","py","Grid","container","marginLeft","borderTop","borderRight","borderBottom","borderLeft","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","borderStyle","mb","pt","WindEffect","transform","AirConditioner","Fade","in","timeout","enter","exit","Toast","toast","handleClose","event","reason","Snackbar","autoHideDuration","onClose","Alert","severity","children","preferredMode","useMediaQuery","useMemo","Copyright","Link","Date","getFullYear","App","Container","maxWidth","sx","component","gutterBottom","store","configureStore","reducer","acReducer","toastReducer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.2f277698.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EmojiObjectsOutlinedIcon from \"@material-ui/icons/EmojiObjectsOutlined\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(3, 0),\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n}));\n\nexport default function ProTip() {\n  const classes = useStyles();\n  return (\n    <Typography align=\"center\" className={classes.root} color=\"textSecondary\">\n      <EmojiObjectsOutlinedIcon />\n      Tip: 为你的夏日带去清凉！\n    </Typography>\n  );\n}\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport type { RootState, AppDispatch } from \"./store\";\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nexport interface ToastState {\n  /**\n   * 是否打开\n   */\n  open: boolean;\n  /**\n   * 消息内容\n   */\n  message: string;\n}\n\nconst initialState: ToastState = {\n  open: false,\n  message: \"\",\n};\n\nexport const toastSlice = createSlice({\n  name: \"toast\",\n  initialState,\n  reducers: {\n    /**\n     * 设置提示框内容\n     * @param state\n     * @param action\n     */\n    setMessage(state, action: PayloadAction<string>) {\n      state.message = action.payload;\n    },\n    /**\n     * 设置提示框是否显示\n     * @param state\n     * @param action\n     */\n    setOpen(state, action: PayloadAction<boolean>) {\n      state.open = action.payload;\n    },\n  },\n});\n\nexport const { setMessage, setOpen } = toastSlice.actions;\n\nexport default toastSlice.reducer;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { AppThunk, RootState } from \"../../app/store\";\nimport { setMessage, setOpen } from \"../toast/toastSlice\";\n\nexport interface AcState {\n  /**\n   * 状态\n   */\n  status: boolean;\n  /**\n   * 模式\n   */\n  mode: \"cold\" | \"hot\";\n  /**\n   * 温度\n   */\n  temperature: number;\n}\n\nexport type AcMode = \"cold\" | \"hot\";\n\nconst namespace = \"ac-\";\nconst temperatureKey = namespace + \"temperature\";\n\nconst initialState: AcState = {\n  status: false,\n  mode: \"cold\",\n  temperature: parseInt(localStorage.getItem(temperatureKey) || \"\") || 20,\n};\n\nconst maxTemperature = 31;\nconst minTemperature = 16;\n\nexport const acSlice = createSlice({\n  name: \"ac\",\n  initialState,\n  reducers: {\n    /**\n     * 增加温度\n     * @param state\n     */\n    increment: (state) => {\n      state.temperature += 1;\n      localStorage.setItem(temperatureKey, state.temperature.toString());\n    },\n\n    /**\n     * 降低温度\n     * @param state\n     */\n    decrement: (state) => {\n      state.temperature -= 1;\n      localStorage.setItem(temperatureKey, state.temperature.toString());\n    },\n\n    /**\n     * 设置空调模式\n     * @param state\n     * @param action\n     */\n    setMode(state, action: PayloadAction<AcMode>) {\n      state.mode = action.payload;\n    },\n\n    /**\n     * 切换开关状态\n     * @param state\n     * @param action\n     */\n    toggleStatus(state) {\n      state.status = !state.status;\n    },\n  },\n});\n\nexport const selectTemperature = (state: RootState) => state.ac.temperature;\n\nexport const { increment, decrement, setMode, toggleStatus } = acSlice.actions;\n\n/**\n * 增加温度\n * @returns\n */\nexport const increaseTemperature = (): AppThunk => (dispatch, getState) => {\n  const currentValue = selectTemperature(getState());\n  if (currentValue < maxTemperature) {\n    dispatch(increment());\n  } else {\n    dispatch(setMessage(\"已经是最大温度啦！\"));\n    dispatch(setOpen(true));\n  }\n};\n\n/**\n * 降低温度\n * @returns\n */\nexport const decreaseTemperature = (): AppThunk => (dispatch, getState) => {\n  const currentValue = selectTemperature(getState());\n  if (currentValue > minTemperature) {\n    dispatch(decrement());\n  } else {\n    dispatch(setMessage(\"已经是最小温度啦！\"));\n    dispatch(setOpen(true));\n  }\n};\n\nexport default acSlice.reducer;\n","import {\n  createMuiTheme,\n  makeStyles,\n  ThemeProvider,\n} from \"@material-ui/core/styles\";\nimport { Box, Fab } from \"@material-ui/core\";\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\nimport AcUnitIcon from \"@material-ui/icons/AcUnit\";\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\n\nimport { green } from \"@material-ui/core/colors\";\nimport { useAppDispatch, useAppSelector } from \"../app/hooks\";\nimport {\n  decreaseTemperature,\n  increaseTemperature,\n  setMode,\n  toggleStatus,\n} from \"../features/ac/acSlice\";\nimport { RootState } from \"../app/store\";\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\n/**\n * 遥控器按钮\n * @param props\n */\nfunction RCButton(props: any) {\n  return (\n    <Fab\n      {...props}\n      onClick={() => {\n        playDi();\n        props.onClick();\n      }}\n    ></Fab>\n  );\n}\n\n/**\n * 播放「嘀」的音效\n */\nfunction playDi() {\n  const di = document.getElementById(\"di\");\n  if (di) {\n    (di as HTMLAudioElement).play();\n  }\n}\n\n/**\n * 播放工作声音\n */\nfunction playWorkSound() {\n  const acWork = document.getElementById(\"ac-work\") as HTMLAudioElement;\n  acWork.load();\n  acWork.play();\n}\n\n/**\n * 切换空调工作状态\n * @param {*} props\n */\nfunction toggleAC(status: boolean, dispatch: any) {\n  if (status) {\n    (document.getElementById(\"ac-work\") as HTMLAudioElement).load();\n  } else {\n    playWorkSound();\n  }\n\n  dispatch(toggleStatus());\n}\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: green,\n  },\n});\n\nconst jsdelivrCDN =\n  \"https://cdn.jsdelivr.net/gh/YunYouJun/air-conditioner/public\";\n\nconst SOUND_DI_PATH =\n  (process.env.NODE_ENV === \"production\"\n    ? jsdelivrCDN\n    : process.env.PUBLIC_URL) + \"/assets/audio/di.mp3\";\n\nconst SOUND_AC_WORK_PATH =\n  (process.env.NODE_ENV === \"production\"\n    ? jsdelivrCDN\n    : process.env.PUBLIC_URL) + \"/assets/audio/ac-work.mp3\";\n\n/**\n * 遥控\n * @param {*} props\n */\nexport default function RemoteControl() {\n  const classes = useStyles();\n  const ac = useAppSelector((state: RootState) => state.ac);\n  const dispatch = useAppDispatch();\n  return (\n    <Box my={4} display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n      <audio id=\"di\" src={SOUND_DI_PATH} preload=\"auto\"></audio>\n      <audio id=\"ac-work\" src={SOUND_AC_WORK_PATH} preload=\"auto\"></audio>\n      <div>\n        {\" \"}\n        <RCButton\n          color=\"primary\"\n          aria-label=\"cold\"\n          className={classes.margin}\n          onClick={() => {\n            dispatch(setMode(\"cold\"));\n          }}\n        >\n          <AcUnitIcon />\n        </RCButton>\n        <ThemeProvider theme={theme}>\n          <RCButton\n            color={ac.status ? \"secondary\" : \"primary\"}\n            aria-label=\"add\"\n            className={classes.margin}\n            onClick={() => {\n              toggleAC(ac.status, dispatch);\n            }}\n            style={{ color: \"white\" }}\n          >\n            <PowerSettingsNewIcon />\n          </RCButton>\n        </ThemeProvider>\n        <RCButton\n          aria-label=\"hot\"\n          className={classes.margin}\n          style={{ backgroundColor: \"orange\", color: \"white\" }}\n          onClick={() => {\n            dispatch(setMode(\"hot\"));\n          }}\n        >\n          <WbSunnyIcon />\n        </RCButton>\n      </div>\n      <RCButton\n        aria-label=\"add\"\n        className={classes.margin}\n        onClick={() => {\n          dispatch(increaseTemperature());\n        }}\n      >\n        <ExpandLessIcon />\n      </RCButton>\n      <RCButton\n        aria-label=\"reduce\"\n        className={classes.margin}\n        onClick={() => {\n          dispatch(decreaseTemperature());\n        }}\n      >\n        <ExpandMoreIcon />\n      </RCButton>\n    </Box>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/logo.5fb28574.svg\";","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Box, Grid, Typography, Fade } from \"@material-ui/core\";\nimport logo from \"../../logo.svg\";\n\nimport * as pkg from \"../../../package.json\";\n\nimport \"./AirConditioner.scss\";\nimport { useAppSelector } from \"../../app/hooks\";\n\nimport { AcMode, selectTemperature } from \"./acSlice\";\n\nconst acColor = {\n  border: \"#e0e0e0\",\n  display: \"#cccccc\",\n  wind: \"#bbbbbb\",\n};\n\nconst useStyles = makeStyles((theme) => ({\n  acBorder: {\n    borderRadius: 10,\n    borderBottomLeftRadius: 20,\n    borderBottomRightRadius: 20,\n  },\n  acDisplay: {\n    textShadow: \"0px 0px 2px rgba(0, 0, 0, 0.3)\",\n    // visibility: (props) => props.visibility,\n  },\n  acLogo: {\n    width: 12,\n  },\n  acStatus: {\n    backgroundColor: (props?: any) => props.backgroundColor || \"transparent\",\n  },\n  energyLabel: {\n    backgroundColor: \"#4ea5f5\",\n  },\n}));\n\nfunction AcBorder(props: any) {\n  return (\n    <Box\n      bgcolor=\"background.paper\"\n      height={150}\n      border={1}\n      borderColor={acColor.border}\n      borderRadius={10}\n      boxShadow={3}\n      position=\"relative\"\n      {...props}\n    ></Box>\n  );\n}\n\n/**\n * 空调温度\n * @returns\n */\nfunction AcTemperature() {\n  const temperature = useAppSelector(selectTemperature);\n  return (\n    <Typography variant=\"h4\" align=\"center\">\n      <span className=\"font-digit ac-temperature\">{temperature}</span>\n      <small className=\"font-digit\">°C</small>\n    </Typography>\n  );\n}\n\n/**\n * 显示屏（温度/图标）\n * @param props\n */\nconst AcDisplay = React.forwardRef((props: { mode: AcMode }, ref) => {\n  return (\n    <Box\n      {...props}\n      ref={ref}\n      position=\"absolute\"\n      top={25}\n      right={30}\n      color={acColor.display}\n    >\n      <Typography align=\"left\" variant=\"subtitle2\">\n        <span>{props.mode === \"cold\" ? \"❄\" : \"☀️\"}</span>️️\n      </Typography>\n      <AcTemperature />\n    </Box>\n  );\n});\n\n/**\n * 空调 Logo\n * @param props\n */\nfunction AcLogo(props: any) {\n  return (\n    // <Box align=\"center\" mt={12}>\n    <Box textAlign=\"center\" mt={12}>\n      <a\n        href={pkg.repository.url}\n        title={pkg.description}\n        target=\"_blank\"\n        rel=\"noreferrer noopener\"\n      >\n        <img className={props.className} src={logo} alt=\"logo\" />\n      </a>\n    </Box>\n  );\n}\n\n/**\n * 出风口线\n * @returns\n */\nfunction AirOutlet() {\n  return <Box mt={1} border={1} borderColor={acColor.border}></Box>;\n}\n\n/**\n * 空调状态\n * @param props\n */\nfunction AcStatus(props: { status: boolean }) {\n  // 空调状态小灯\n  const led = { backgroundColor: props.status ? \"#38F709\" : acColor.border };\n  const classes = useStyles(led);\n  return (\n    <Box\n      className={classes.acStatus}\n      position=\"absolute\"\n      height={4}\n      width={4}\n      borderRadius=\"50%\"\n      top={130}\n      right={10}\n    ></Box>\n  );\n}\n\n/**\n * 文本标签（黑色小点点）\n * @param num\n * @param color\n * @param size\n * @param mx\n * @param my\n */\nfunction textLabel(\n  num: number,\n  color: string,\n  size: number,\n  mx: number,\n  my = 0\n) {\n  const titleLength = [...new Array(num).keys()];\n  const titleLabel = titleLength.map((n) => (\n    <Box\n      key={n}\n      mx={mx}\n      my={my}\n      width={size}\n      height={size}\n      borderRadius=\"50%\"\n      bgcolor={color}\n    ></Box>\n  ));\n  return (\n    <Box display=\"flex\" justifyContent=\"center\">\n      {titleLabel}\n    </Box>\n  );\n}\n\n/**\n * 功耗标签\n * @param props\n */\nfunction EnergyLabel(props: any) {\n  return (\n    <Box\n      className={props.className}\n      position=\"absolute\"\n      top={10}\n      left={10}\n      height={70}\n      width={50}\n      borderRadius={2}\n      p={0.5}\n    >\n      {textLabel(6, \"white\", 4, 0.25)}\n      <Box\n        my={0.5}\n        px={1}\n        py={0.25}\n        height={28}\n        width=\"100%\"\n        bgcolor=\"background.paper\"\n      >\n        <Grid container>\n          <Box bgcolor=\"green\" height={3} width=\"40%\"></Box>\n          <Box\n            height={3}\n            marginLeft=\"40%\"\n            style={{\n              borderTop: 1.5,\n              borderRight: 2,\n              borderBottom: 1.5,\n              borderLeft: 0,\n              borderTopColor: \"transparent\",\n              borderRightColor: \"green\",\n              borderBottomColor: \"transparent\",\n              borderLeftColor: \"transparent\",\n              borderStyle: \"solid\",\n            }}\n          ></Box>\n          <Box bgcolor=\"green\" height={3} width=\"10%\"></Box>\n        </Grid>\n        <Box mt={0.25} bgcolor=\"lightGreen\" height={3} width=\"50%\"></Box>\n        <Box mt={0.25} bgcolor=\"#ffc107\" height={3} width=\"60%\"></Box>\n        <Box mt={0.25} bgcolor=\"orange\" height={3} width=\"70%\"></Box>\n        <Box mt={0.25} bgcolor=\"red\" height={3} width=\"80%\"></Box>\n      </Box>\n      <Box\n        mb={0.25}\n        pt={0.1}\n        height={20}\n        width=\"100%\"\n        bgcolor=\"background.paper\"\n      >\n        {textLabel(11, \"black\", 2, 0.1, 0.25)}\n        <Box my={0.1} borderTop={1} height={0} width=\"100%\"></Box>\n        {textLabel(9, \"black\", 1.5, 0.1, 0.25)}\n        {textLabel(10, \"black\", 1.2, 0.1, 0)}\n      </Box>\n      {textLabel(8, \"white\", 2, 0.1)}\n    </Box>\n  );\n}\n\n/**\n * 风特效\n * @param props\n */\nconst WindEffect = React.forwardRef((props, ref) => {\n  return (\n    <Box {...props} ref={ref} mt={3} display=\"flex\" justifyContent=\"center\">\n      <Box\n        style={{ transform: \"rotate(10deg)\" }}\n        bgcolor={acColor.wind}\n        width={5}\n        height={40}\n      ></Box>\n      <Box mx={10} bgcolor={acColor.wind} width={5} height={40}></Box>\n      <Box\n        style={{ transform: \"rotate(-10deg)\" }}\n        bgcolor={acColor.wind}\n        width={5}\n        height={40}\n      ></Box>\n    </Box>\n  );\n});\n\n/**\n * 空调\n */\nexport default function AirConditioner(props: {\n  mode: AcMode;\n  status: boolean;\n  temperature: number;\n}) {\n  const classes = useStyles(props);\n  return (\n    <Box>\n      <AcBorder className={classes.acBorder}>\n        <Fade in={props.status}>\n          <AcDisplay mode={props.mode} />\n        </Fade>\n        <AcLogo className={classes.acLogo} />\n        <AirOutlet />\n        <AcStatus status={props.status} />\n        <EnergyLabel className={classes.energyLabel} titleLength={6} />\n      </AcBorder>\n      <Fade in={props.status} timeout={{ enter: 2500, exit: 1500 }}>\n        <WindEffect />\n      </Fade>\n    </Box>\n  );\n}\n","import { Alert, Snackbar } from \"@material-ui/core\";\nimport { RootState } from \"../../app/store\";\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\nimport { setOpen } from \"./toastSlice\";\n\nexport default function Toast() {\n  const toast = useAppSelector((state: RootState) => state.toast);\n  const dispatch = useAppDispatch();\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    dispatch(setOpen(false));\n  };\n\n  return (\n    <Snackbar open={toast.open} autoHideDuration={5000} onClose={handleClose}>\n      <Alert onClose={handleClose} severity=\"error\" style={{ width: \"100%\" }}>\n        {toast.message}\n      </Alert>\n    </Snackbar>\n  );\n}\n","import { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useMediaQuery } from \"@material-ui/core\";\nimport { ThemeProvider as MuiThemeProvider } from \"@material-ui/styles\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\nexport function ThemeProvider(props: any) {\n  const { children } = props;\n\n  // https://developer.mozilla.org/zh-CN/docs/Web/CSS/@media/prefers-color-scheme\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n  const preferredMode = prefersDarkMode ? \"dark\" : \"light\";\n  // A custom theme for this app\n  const theme = useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          mode: preferredMode,\n        },\n      }),\n    [preferredMode]\n  );\n\n  return <MuiThemeProvider theme={theme}>{children}</MuiThemeProvider>;\n}\n\nThemeProvider.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default ThemeProvider;\n","import Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Link from \"@material-ui/core/Link\";\n\nimport \"./App.scss\";\nimport ProTip from \"./components/Protip\";\nimport RemoteControl from \"./components/RemoteControl\";\n\nimport AirConditioner from \"./features/ac/AirConditioner\";\nimport Toast from \"./features/toast/Toast\";\n\nimport { ThemeProvider } from \"./theme\";\n\nimport * as pkg from \"../package.json\";\nimport { useAppSelector } from \"./app/hooks\";\nimport { RootState } from \"./app/store\";\n\nfunction Copyright() {\n  return (\n    <div>\n      <Box>\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n          {\"© \"}\n          <Link color=\"inherit\" href={pkg.repository.url}>\n            Yun Air Conditioner\n          </Link>\n          {\" - \"}\n          <Link color=\"inherit\" href={pkg.author.url}>\n            {pkg.author.name}\n          </Link>\n        </Typography>\n      </Box>\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {\" 2019 - \" + new Date().getFullYear()}\n      </Typography>\n    </div>\n  );\n}\n\nfunction App() {\n  const ac = useAppSelector((state: RootState) => state.ac);\n\n  return (\n    <ThemeProvider>\n      <Container maxWidth=\"sm\">\n        <Box sx={{ pt: 4 }} bgcolor=\"transparent\">\n          <Typography\n            color=\"textPrimary\"\n            align=\"center\"\n            variant=\"h4\"\n            component=\"h1\"\n            gutterBottom\n          >\n            便携小空调\n          </Typography>\n          <ProTip />\n          <AirConditioner\n            status={ac.status}\n            temperature={ac.temperature}\n            mode={ac.mode}\n          />\n          <RemoteControl />\n          <Copyright />\n        </Box>\n        <Toast />\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\nimport acReducer from \"../features/ac/acSlice\";\nimport toastReducer from \"../features/toast/toastSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    ac: acReducer,\n    toast: toastReducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.scss\";\nimport App from \"./App\";\nimport { store } from \"./app/store\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n// import ReactGA from \"react-ga\";\n// ReactGA.initialize(\"UA-121354150-10\");\n// ReactGA.pageview(window.location.pathname + window.location.search);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}